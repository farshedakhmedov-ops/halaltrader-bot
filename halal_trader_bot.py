import os
import logging
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import Dispatcher, CommandHandler
from pybit.unified_trading import HTTP

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ª–æ–≥–æ–≤
logging.basicConfig(format='%(asctime)s - %(name)s - %(levelname)s - %(message)s', level=logging.INFO)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
BYBIT_API_KEY = os.getenv("BYBIT_API_KEY")
BYBIT_API_SECRET = os.getenv("BYBIT_API_SECRET")
WEBHOOK_URL = os.getenv("WEBHOOK_URL")  # https://your-app-name.onrender.com/webhook

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ –∏ Bybit API
bot = Bot(token=BOT_TOKEN)
bybit = HTTP(api_key=BYBIT_API_KEY, api_secret=BYBIT_API_SECRET)
app = Flask(__name__)
dispatcher = Dispatcher(bot=bot, update_queue=None, use_context=True)

# –ö–æ–º–∞–Ω–¥—ã
def start(update, context):
    update.message.reply_text("ü§ñ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞—á–∏–Ω–∞—é —Ç–æ—Ä–≥–æ–≤–ª—é.")
    # –ü—Ä–∏–º–µ—Ä —Ç–µ—Å—Ç–æ–≤–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ (–≤–Ω–∏–º–∞–Ω–∏–µ: –¥–æ–±–∞–≤—å—Ç–µ —Å–≤–æ—é —Å—Ç—Ä–∞—Ç–µ–≥–∏—é!)
    try:
        balance = bybit.get_wallet_balance(accountType="UNIFIED")['result']['list'][0]['coin'][0]['walletBalance']
        update.message.reply_text(f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance} USDT")
    except Exception as e:
        update.message.reply_text(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")

dispatcher.add_handler(CommandHandler("start", start))

# Flask –º–∞—Ä—à—Ä—É—Ç –¥–ª—è Webhook
@app.route("/webhook", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

@app.route("/", methods=["GET"])
def index():
    return "ü§ñ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

if __name__ == "__main__":
    bot.setWebhook(f"{WEBHOOK_URL}/webhook")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
