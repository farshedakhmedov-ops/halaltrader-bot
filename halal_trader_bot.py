import os
import logging
from telegram.ext import Updater, CommandHandler, CallbackContext
from telegram import Update
from pybit.unified_trading import HTTP

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(level=logging.INFO)

# –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω—ã –∏–∑ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö —Å—Ä–µ–¥—ã
TELEGRAM_BOT_TOKEN = os.environ.get("TELEGRAM_BOT_TOKEN")
BYBIT_API_KEY = os.environ.get("BYBIT_API_KEY")
BYBIT_API_SECRET = os.environ.get("BYBIT_API_SECRET")

# –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Bybit (UNIFIED –∞–∫–∫–∞—É–Ω—Ç)
session = HTTP(
    api_key=BYBIT_API_KEY,
    api_secret=BYBIT_API_SECRET,
)

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update: Update, context: CallbackContext):
    update.message.reply_text("üöÄ –•–∞–ª–∞–ª-—Ç—Ä–µ–π–¥–µ—Ä –∑–∞–ø—É—â–µ–Ω!")

# –ö–æ–º–∞–Ω–¥–∞ /stop
def stop(update: Update, context: CallbackContext):
    update.message.reply_text("‚õîÔ∏è –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω.")

# –ö–æ–º–∞–Ω–¥–∞ /balance
def balance(update: Update, context: CallbackContext):
    try:
        result = session.get_wallet_balance(accountType="UNIFIED")
        usdt_balance = result["result"]["list"][0]["totalWalletBalance"]
        update.message.reply_text(f"üí∞ –ë–∞–ª–∞–Ω—Å: {usdt_balance} USDT")
    except Exception as e:
        update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞:\n{e}")

# –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è
def main():
    updater = Updater(token=TELEGRAM_BOT_TOKEN, use_context=True)
    dp = updater.dispatcher

    dp.add_handler(CommandHandler("start", start))
    dp.add_handler(CommandHandler("stop", stop))
    dp.add_handler(CommandHandler("balance", balance))

    updater.start_polling()
    updater.idle()

if name == '__main__':
    main()
