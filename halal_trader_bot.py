import os
import logging
from flask import Flask, request
from telegram import Bot, Update
from telegram.ext import Dispatcher, CommandHandler
from pybit.unified_trading import HTTP

# –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
logging.basicConfig(format="%(asctime)s - %(name)s - %(levelname)s - %(message)s", level=logging.INFO)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è
BOT_TOKEN = os.getenv("TELEGRAM_BOT_TOKEN")
BYBIT_API_KEY = os.getenv("BYBIT_API_KEY")
BYBIT_API_SECRET = os.getenv("BYBIT_API_SECRET")
WEBHOOK_URL = f"https://{os.getenv('RENDER_EXTERNAL_HOSTNAME')}/webhook"

# Telegram –∏ Bybit –∫–ª–∏–µ–Ω—Ç—ã
bot = Bot(token=BOT_TOKEN)
bybit = HTTP(api_key=BYBIT_API_KEY, api_secret=BYBIT_API_SECRET)

# Flask-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
app = Flask(__name__)
dispatcher = Dispatcher(bot=bot, update_queue=None, use_context=True)

# –ö–æ–º–∞–Ω–¥–∞ /start
def start(update, context):
    update.message.reply_text("üöÄ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω! –ù–∞—á–∏–Ω–∞—é —Ç–æ—Ä–≥–æ–≤–ª—é.")

    try:
        balance = bybit.get_wallet_balance(accountType="UNIFIED")['result']['list'][0]['coin'][0]['walletBalance']
        update.message.reply_text(f"üí∞ –ë–∞–ª–∞–Ω—Å: {balance} USDT")
    except Exception as e:
        update.message.reply_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –±–∞–ª–∞–Ω—Å–∞: {e}")

# –û–±—Ä–∞–±–æ—Ç–∫–∞ Telegram webhook
@app.route("/webhook", methods=["POST"])
def webhook():
    update = Update.de_json(request.get_json(force=True), bot)
    dispatcher.process_update(update)
    return "ok"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏
@app.route("/", methods=["GET"])
def index():
    return "‚úÖ –ë–æ—Ç —Ä–∞–±–æ—Ç–∞–µ—Ç!"

# –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
dispatcher.add_handler(CommandHandler("start", start))

# –ó–∞–ø—É—Å–∫–∞–µ–º Flask
if __name__ == "__main__":
    bot.setWebhook(f"{WEBHOOK_URL}/webhook")
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)))
